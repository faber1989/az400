# AZ-400 Crash Course Outline

## DAY 2

### Shavings

* Author AzDo extensions
* Azure Arc
* Secure files

### Pipelines & Containers

* Whitesource project
* Multi-stage images
* Signed ACR images
* Sample project

### Infrastructure

* ARM templates
* Key Vault integration
* Continuous Security Validation

### Artifacts

* Visual Studio integration

### Test Plans

* Exploratory testing

### Monitoring

* Diagnostics settings
* Log Analytics
* Application Insights
* KQL

### The Exam

* Item types
* Practice exams (Whizlabs practice items)
* Online testing process
* Azure trial









## DAY 1

* Manage source control (10-15%)
    * Import repo from GitHub
    * Branch policies
    * Squash merge

* Develop an SRE strategy (5-10%)
    * Identity
        * Azure MFA and Conditional Access

    * Template deployment
        * linked templates
        * Key Vault integration

    * Configuration management
        * Azure Automation DSC (PowerShell)
        * Custom Script Extension

    * Containers
        * ACR
            * Trusted (signed) images
        * ACI
        * AKS

    * App hosting options
        * App Service
            * Managed identity
        * Function App
        * Logic App automation

    * Alerts
        * rules
        * webhooks
        * ITSM Connector

* Develop a security and compliance plan (10-15%)
    * Continuous Security Validation
        * https://timw.info/i0y

    * Key Vault
            * RBAC
            * Advanced access policies
            * Secrets permissions

    * Storage Account
            * Managed storage account
            * SAS vs shared key authentication

    * Azure DevOps RBAC
        Reader and Service Account roles
        * Basic vs Stakeholder access levels
        * VS App Center distribution groups

    * Policy
        * Conditional Access device policy
        * Interpret Azure Policy conditions and actions

    * Continuous assurance
        * Secure DevOps Kit for Azure (https://timw.info/9s5)



* Develop an instrumentation strategy (5-10%)
    * App Insights
        * app map
        * user flows
        * impact
        * users
    * Log Analytics


###################################################################


# DAY 2

* yesterday's shavings
    * multi-stage Dockerfile
    * DSC PowerShell
    * AKS Azure CLI
    * Continuous Secuity Validation

* CI pipelines
    * Agent Pools!
    * Integrations
    * Actions

* CD pipelines
    * Key Vault
        * ARM template KV reference

* Artifacts

* Service Hooks > Teams

* Test & Feedback

* Monitoring
    - App Insights
    - Log Analytics / KQL

* AZ-400 Prep


* Define and implement CI (20-25%)
    * Build agents
        * Self-hosted agent & external Git connection
        * Agent pool image types
    * Third-party integrations
        * Whitesource Bolt
        * Maven & PMD
        * Use Jenkins for Azure Repos
        * Cobertura code coverage
        * Octopus Deploy & Tentacle
        * SonarCloud
        * SonarQube
        * Black Duck
        * Selenium
    * Variable group
        Key Vault
    * Containers
        * ACR webhook
        * Docker multi-stage builds (Dockerfile syntax)
        * Docker image scanning scheduled task
        * Helm and Tiller charts to AKS
    * Branch and path filters


* Define and implement a CD and RM strategy (10-15%)
    * Azure Artifacts
        * Artifacts new feed for public access
        * upstream sources
        * How to create and connect to feed
        * NPM .nmprc files
        * Package feed permissions (Reader, Contributor, etc)
        * Azure Artifacts Credential Provider
    * Containers
        * Helm & Tiller deploy charts to AKS
        * Run ACI images in AKS (YAML, kubectl, helm)
    * Release pipelines
        * Pre- and post- conditions/gates
        * Interpret a GUI release pipeline with triggers
        * DACPAC for Azure SQL DB deployment tasks
        * Release stage retention policies
        * Deployment groups
        * Deployment types
            * blue/green
            * canary
            * rolling
        * App Service / Function deployment slots for rolling upgrades
    * App Center
        * iOS app center cert .p12
        * Register devices in Apple Developer portal

* Facilitate communication and collaboration (10-15%)
    * Service hooks
        * Teams
        * Slack
    * Azure Boards
        * Dashboard widgets (https://timw.info/mxo)
            * burndown
            * burnup
            * cycle time
            * lead time
            * velocity
        * Dependency Tracker extension
    * Work item processes (https://timw.info/jp9)
        * Basic
        * Agile
        * Scrum
        * CMMI
    * Create dependency graph for application
    * Continuous Assurance
        * Secure DevOps Kit for Azure (https://timw.info/90j)
    * Azure Test Plans
        * Test & Feedback extension